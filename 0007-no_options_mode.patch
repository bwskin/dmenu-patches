By me: Added option to disable stdin, so can be used as input only
---
diff --git a/dmenu.c b/dmenu.c
index 5032fd3..f54a6f0 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -55,6 +55,7 @@ static struct item *prev, *curr, *next, *sel;
 static int mon = -1, screen;
 static int lines_below_prompt = 0;
 static int password_height_offset = 0;
+static int no_options = 0;
 
 static Atom clip, utf8;
 static Display *dpy;
@@ -634,7 +635,7 @@ readstdin(void)
 	char buf[sizeof text], *p;
 	size_t i, imax = 0, size = 0;
 	unsigned int tmpmax = 0;
-	if(passwd){
+	if(passwd || no_options){
 		inputw = lines = 0;
 		return;
 	}
@@ -819,7 +820,7 @@ usage(void)
 {
 	fputs("usage: dmenu [-bfivP] [-l lines] [-h height] [-p prompt] [-fn font] [-m monitor]\n"
 	      "             [-x xoffset] [-y yoffset] [-z width]\n"
-	      "             [-lbp]\n"
+	      "             [-lbp] [-no]\n"
 	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-w windowid]\n"
 	      "             [-d separator] [-D separator]\n", stderr);
 	exit(1);
@@ -849,6 +850,8 @@ main(int argc, char *argv[])
 			fstrstr = cistrstr;
 		} else if (!strcmp(argv[i], "-P"))   /* is the input a password */
 			passwd = 1;
+		else if (!strcmp(argv[i], "-no"))  /* disable showing options (input only) */
+			no_options = 1;
 		else if (i + 1 == argc)
 			usage();
 		/* these options take one argument */
